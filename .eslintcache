[{"/home/eklage/dev/React Project/simon2/src/index.js":"1","/home/eklage/dev/React Project/simon2/src/App.js":"2","/home/eklage/dev/React Project/simon2/src/reportWebVitals.js":"3","/home/eklage/dev/React Project/simon2/src/ui/Layout.jsx":"4","/home/eklage/dev/React Project/simon2/src/ui/ColorDiv.jsx":"5","/home/eklage/dev/React Project/simon2/src/ui/Button.jsx":"6","/home/eklage/dev/React Project/simon2/src/ui/RoundedButton.jsx":"7","/home/eklage/dev/React Project/simon2/src/ui/ContainerRow.jsx":"8","/home/eklage/dev/React Project/simon2/src/ui/MuteSVG.jsx":"9","/home/eklage/dev/React Project/simon2/src/ui/UnmuteSVG.jsx":"10"},{"size":500,"mtime":1607617285943,"results":"11","hashOfConfig":"12"},{"size":3821,"mtime":1607787367579,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607241774066,"results":"14","hashOfConfig":"12"},{"size":5589,"mtime":1607799606195,"results":"15","hashOfConfig":"12"},{"size":332,"mtime":1607796816117,"results":"16","hashOfConfig":"12"},{"size":1197,"mtime":1607793555221,"results":"17","hashOfConfig":"12"},{"size":1202,"mtime":1607795457786,"results":"18","hashOfConfig":"12"},{"size":157,"mtime":1607785642986,"results":"19","hashOfConfig":"12"},{"size":614,"mtime":1607795198828,"results":"20","hashOfConfig":"12"},{"size":506,"mtime":1607795318808,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pi33hp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eklage/dev/React Project/simon2/src/index.js",[],["44","45"],"/home/eklage/dev/React Project/simon2/src/App.js",["46","47","48","49","50"],"import { useState, useEffect } from \"react\";\nimport Layout from \"./ui/Layout\";\n// import \"./App.css\";\n// import Layout from \"./ui/Layout\";\n\nconst initArray = [\"Yellow\", \"Green\", \"Red\", \"Blue\"];\n\nconst App = () => {\n  const [seqArray, setSeqArray] = useState([]);\n  const [userArray, setUserArray] = useState([]);\n  const [wrong, setWrong] = useState(false);\n  const [count, setCount] = useState(0);\n  // const [timeleft, setTimeleft] = useState(1);\n  const [started, setStarted] = useState(false);\n  const [classN, setClassN] = useState(\"\");\n  const [classInput, setClassInput] = useState(\"\");\n  const [isMuted, setIsMuted] = useState(false);\n  const [level, setLevel] = useState(0);\n  const [highscore, setHighscore] = useState(0);\n  // useEffect(() => {\n  //   started === true &&\n  //     timeleft > 0 &&\n  //     setTimeout(() => setTimeleft(timeleft - 1), 1000);\n  // }, [started, timeleft]);\n\n  const handleClick = (e) => {\n    if (e.target.value === \"Stop\") {\n      setSeqArray([]);\n      setStarted(false);\n      // setTimeleft(3);\n      setWrong(false);\n    } else {\n      setTimeout(() => handleSeq(), 1000);\n      setStarted(true);\n      setWrong(false);\n    }\n  };\n\n  const handleSeq = () => {\n    let genNum = Math.floor(Math.random() * 4);\n    setSeqArray([...seqArray, initArray[genNum]]);\n    setLevel(level + 1);\n    setUserArray([]);\n    setCount(0);\n  };\n\n  const handleUserInput = (e) => {\n    if (!started) return;\n    if (!wrong) {\n      if (seqArray[count] === e.target.value) {\n        setUserArray([...userArray, e.target.value]);\n        setCount(count + 1);\n        count + 1 >= seqArray.length && setTimeout(() => handleSeq(), 500);\n        updateClassInput();\n        // sound effect onclick\n        if (!isMuted) {\n          let audio = new Audio(`/sounds/${e.target.value}.mp3`);\n          audio.play();\n        }\n      } else {\n        console.log(\"Wrong!!!\");\n        console.log(`Should be ${seqArray[count]}`);\n        setWrong(true);\n        level > highscore && setHighscore(level);\n        setLevel(0);\n        // sound effect onclick\n        if (!isMuted) {\n          let audio = new Audio(`/sounds/error.mp3`);\n          audio.play();\n        }\n      }\n    }\n  };\n\n  const updateClassInput = () => {\n    let cc = `highlight2`;\n    setClassInput(cc);\n    setTimeout(() => setClassInput(\"\"), 500);\n  };\n\n  const updateClass = () => {\n    let cc = `${classN} highlight`;\n    setClassN(cc);\n    setTimeout(() => setClassN(\"\"), 500);\n  };\n\n  useEffect(() => {\n    if (seqArray.length !== 0 && !wrong) {\n      updateClass();\n\n      // sound effect\n      if (!isMuted) {\n        let audio = new Audio(`/sounds/${seqArray[seqArray.length - 1]}.mp3`);\n        audio.play();\n      }\n    }\n  }, [seqArray]);\n  return (\n    <Layout />\n    // <div className=\"App\">\n    //   {/* {timeleft === 0 ? `Level: ${level}` : `Game Start in ${timeleft}`} */}\n    //   High Score: {highscore}\n    //   <br />\n    //   Initial Array = {initArray}\n    //   <br />\n    //   Sequence Array = {seqArray} <br />\n    //   User Array = {userArray} <br />\n    //   <button onClick={handleClick} value={started ? \"Stop\" : \"Start\"}>\n    //     {started ? \"Stop\" : \"Start\"}\n    //   </button>\n    //   <button onClick={() => setIsMuted(!isMuted)}>\n    //     {isMuted ? \"Unmute\" : \"Mute\"}\n    //   </button>\n    //   <br />\n    //   {initArray.map((color) => {\n    //     return (\n    //       <button\n    //         className={`element ${\n    //           color === seqArray[seqArray.length - 1] ? classN : \"\"\n    //         } ${color === userArray[userArray.length - 1] && classInput}`}\n    //         key={color}\n    //         onClick={handleUserInput}\n    //         value={color}\n    //       >\n    //         {color}\n    //       </button>\n    //     );\n    //   })}\n    // </div>\n  );\n};\n\nexport default App;\n","/home/eklage/dev/React Project/simon2/src/reportWebVitals.js",[],"/home/eklage/dev/React Project/simon2/src/ui/Layout.jsx",["51"],"/home/eklage/dev/React Project/simon2/src/ui/ColorDiv.jsx",[],"/home/eklage/dev/React Project/simon2/src/ui/Button.jsx",[],"/home/eklage/dev/React Project/simon2/src/ui/RoundedButton.jsx",[],"/home/eklage/dev/React Project/simon2/src/ui/ContainerRow.jsx",[],"/home/eklage/dev/React Project/simon2/src/ui/MuteSVG.jsx",[],"/home/eklage/dev/React Project/simon2/src/ui/UnmuteSVG.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":16,"column":10,"nodeType":"58","messageId":"59","endLine":16,"endColumn":20},{"ruleId":"56","severity":1,"message":"60","line":17,"column":19,"nodeType":"58","messageId":"59","endLine":17,"endColumn":29},{"ruleId":"56","severity":1,"message":"61","line":26,"column":9,"nodeType":"58","messageId":"59","endLine":26,"endColumn":20},{"ruleId":"56","severity":1,"message":"62","line":47,"column":9,"nodeType":"58","messageId":"59","endLine":47,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":97,"column":6,"nodeType":"65","endLine":97,"endColumn":16,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"64","line":88,"column":6,"nodeType":"65","endLine":88,"endColumn":16,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'classInput' is assigned a value but never used.","Identifier","unusedVar","'setIsMuted' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleUserInput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isMuted', 'updateClass', and 'wrong'. Either include them or remove the dependency array.","ArrayExpression",["70"],["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"72","fix":"74"},"Update the dependencies array to be: [isMuted, seqArray, updateClass, wrong]",{"range":"75","text":"76"},{"range":"77","text":"76"},[2724,2734],"[isMuted, seqArray, updateClass, wrong]",[2592,2602]]